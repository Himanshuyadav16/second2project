<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Apples-MacBook-Pro.local" failures="0" tests="6" name="Command line test" time="0.074" errors="0" timestamp="2023-06-03T16:57:16 IST">
  <testcase classname="BaseClass" name="@BeforeSuite beforeGetUser" time="0.155">
    <failure type="java.lang.NoClassDefFoundError" message="Could not initialize class org.codehaus.groovy.reflection.ReflectionCache">
      <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.reflection.ReflectionCache
at org.codehaus.groovy.runtime.dgmimpl.NumberNumberMetaMethod.<clinit>(NumberNumberMetaMethod.java:33)
at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized0(Native Method)
at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized(Unsafe.java:1160)
at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.createMetaMethodFromClass(MetaClassRegistryImpl.java:258)
at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.<init>(MetaClassRegistryImpl.java:111)
at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.<init>(MetaClassRegistryImpl.java:86)
at groovy.lang.GroovySystem.<clinit>(GroovySystem.java:36)
at org.codehaus.groovy.runtime.InvokerHelper.<clinit>(InvokerHelper.java:86)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.createMap(ScriptBytecodeAdapter.java:635)
at io.restassured.internal.ResponseParserRegistrar.<init>(ResponseParserRegistrar.groovy)
at io.restassured.RestAssured.<clinit>(RestAssured.java:347)
at BaseClass.beforeGetUser(BaseClass.java:15)
Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7 [in thread "main"]
at org.codehaus.groovy.vmplugin.VMPluginFactory.<clinit>(VMPluginFactory.java:43)
at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.registerMethods(MetaClassRegistryImpl.java:210)
at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.<init>(MetaClassRegistryImpl.java:108)
... 32 more
... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeSuite beforeGetUser -->
  <testcase classname="Test3" name="@BeforeSuite beforeSuite" time="-1.685791630987E9">
    <skipped/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="Test3" name="@BeforeTest beforeTest" time="-1.685791630989E9">
    <skipped/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Test3" name="@BeforeClass beforeClass" time="-1.685791631057E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="Test3" name="@BeforeMethod beforeMethod" time="-1.685791631059E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="Test3" name="@AfterMethod afterMethod" time="-1.68579163106E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="Test3" name="@AfterClass AfterClass" time="-1.685791631061E9">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase classname="Test3" name="@AfterTest AfterTest" time="-1.685791631061E9">
    <skipped/>
  </testcase> <!-- @AfterTest AfterTest -->
  <testcase classname="BaseClass" name="getApplicationProperty" time="0.0">
    <skipped/>
  </testcase> <!-- getApplicationProperty -->
  <testcase classname="TestCases" name="deleteTest" time="0.0">
    <skipped/>
  </testcase> <!-- deleteTest -->
  <testcase classname="TestCases" name="getAllTest" time="0.0">
    <skipped/>
  </testcase> <!-- getAllTest -->
  <testcase classname="TestCases" name="postTest" time="0.0">
    <skipped/>
  </testcase> <!-- postTest -->
  <testcase classname="TestCases" name="updateTest" time="0.0">
    <skipped/>
  </testcase> <!-- updateTest -->
  <testcase classname="Test3" name="test" time="0.0">
    <skipped/>
  </testcase> <!-- test -->
</testsuite> <!-- Command line test -->
